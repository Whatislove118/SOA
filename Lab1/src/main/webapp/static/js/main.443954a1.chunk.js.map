{"version":3,"sources":["components/Header/Header.module.scss","modules/api/index.js","components/Header/Header.js","pages/StartPage/StartPage.js","components/ContentList/CellInput/CellInput.js","components/ContentList/CellSelectCapital/CellSelectClimate.js","components/ContentList/CellSelectorGovernment/CellSelectorGovernment.js","components/ContentList/Content.js","Utils/countPage.js","Utils/modes.js","Utils/createJSON.js","pages/ContentPage/ContentPage.js","components/Router/Router.js","App.js","index.js"],"names":["module","exports","start_page","city_page","Header","history","useHistory","routes","useLocation","label","link","className","style","Header__title","Header__title__label","Header__menu","map","route","onClick","push","changePage","StartPage","src","width","height","CellInput","props","checkEnter","useState","content","setContent","border","value","onKeyDown","event","onChange","target","CellSelectClimate","sendUpdate","CellSelectorGovernment","Content","item","id","e","name","coordinates","x","y","Date","creationDate","year","month","day","toString","area","population","metersAboveSeaLevel","establishmentDate","climate","government","governor","birthday","dateTime","date","time","hour","minute","second","countPage","pages","pagesCount","currentPage","i","FILTER","SORT","createJSON","field","console","log","parseInt","isNaN","coordinate_x","parseFloat","coordinate_y","governor_height","base_url","api_url","ContentPage","mode","setMode","setId","setName","setCoordinateX","setCoordinateY","creationData","setData","setArea","setPopulation","setMASL","setEstablishmentDate","setGovernment","setClimate","setGovernorHeight","governor_birthday","setGovernorBirthday","coordinates_x","coordinates_y","sortStructure","setSortStructure","setCurrentPage","perPage","totalCount","setTotalCount","Math","ceil","useEffect","getAll","sendFilter","sendSort","getOneCity","fetch","then","res","json","result","total","err","error","toast","createURL","url","method","headers","body","JSON","stringify","response","a","trunc","status","data","message","success","str","city","Button","variant","detailMessage","catch","text","type","checked","key","keyCode","deleteCity","page","index","Router","children","exact","path","to","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.443954a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1CTzX\",\"Header__title\":\"Header_Header__title__3B4qP\",\"Header__title__label\":\"Header_Header__title__label__27YU_\",\"Header__menu\":\"Header_Header__menu__Fuujb\",\"Header__menu__item\":\"Header_Header__menu__item__jEOuL\",\"Header__menu__item_active\":\"Header_Header__menu__item_active__11ZGI\"};","export const backURL = ''\n\nexport const start_page = '/start';\nexport const city_page = '/city';\n// export const coordinate_page = '/coordinate';\n// export const human_page = '/human';\n","import React from 'react';\nimport style from './Header.module.scss';\nimport {city_page, coordinate_page, human_page, start_page} from \"../../modules/api\";\nimport {useHistory, useLocation} from \"react-router\";\n\nexport const Header = () => {\n\n    const history = useHistory();\n    const location = useLocation();\n\n\n    const routes = [\n        {\n            label: 'Start',\n            link: start_page\n        },\n        {\n            label: 'City',\n            link: `${city_page}/1`\n        }\n        // ,\n        // {\n        //     label: 'Coordinate',\n        //     link: `${coordinate_page}/1`\n        // },\n        // {\n        //     label: 'Human',\n        //     link: `${human_page}/1`\n        // },\n    ]\n\n    const changePage = (route) => {\n        // if(!location.pathname.includes(route.label.split('/')[1]))\n        history.push(route.link)\n    }\n\n    return (\n        <header className={style.Header}>\n            <h1 className={style.Header__title}>\n                Lab1\n                <span className={style.Header__title__label}>\n                    Почикалин В. О.\n                </span>\n            </h1>\n            <div className={style.Header__menu}>\n                {routes.map(route =>\n                    <button\n                    onClick={() => changePage(route)}>\n                        {route.label}\n                    </button>\n                )}\n            </div>\n        </header>\n    );\n};\n\n","import React from 'react';\n\nexport const StartPage = () => {\n\n    return (\n        <div>\n            <div>\n                <h1>Лабораторная работа #1</h1>\n                <h3>Почикалин В.О.</h3>\n                <h4>Вариант <strong>2007</strong></h4>\n            </div>\n            <img src={\"http://cs416923.vk.me/v416923791/57ad/jNvlqxNf-O4.jpg\"} width={'1000px'} height={'1000px'}/>\n        </div>\n    );\n};\n","import React, {useState} from 'react';\n\nexport const CellInput = ({props, checkEnter}) => {\n\n    const [content, setContent] = useState(props)\n\n\n    return (\n        <input\n            style={{border: \"none\"}}\n            value={content}\n            onKeyDown={(event) => {checkEnter(event, content)}}\n            onChange={event => {setContent(event.target.value)}}\n        />\n    );\n};\n\n","import React, {useEffect, useState} from 'react';\n\nexport const CellSelectClimate = ({props, sendUpdate}) => {\n    const [content, setContent] = useState(props);\n\n    return (\n        <select\n            value={content}\n            onChange={(event) => setContent(event.target.value)}\n            onClick={() => {sendUpdate(content)}}\n        >\n            <option value=\"\"> </option>\n            <option value=\"MONSOON\">MONSOON</option>\n            <option value=\"HUMIDSUBTROPICAL\">HUMIDSUBTROPICAL</option>\n            <option value=\"SUBARCTIC\">SUBARCTIC</option>\n        </select>\n    );\n};\n","import React, {useState} from 'react';\n\nexport const CellSelectorGovernment = ({props, sendUpdate}) => {\n    const [content, setContent] = useState(props);\n\n    return (\n        <select\n            value={content}\n            onChange={(event) => setContent(event.target.value)}\n            onClick={() => {sendUpdate(content)}}\n        >\n            <option value=\"\"> </option>\n            <option value=\"ANARCHY\">ANARCHY</option>\n            <option value=\"DESPOTISM\">DESPOTISM</option>\n            <option value=\"CORPORATOCRACY\">CORPORATOCRACY</option>\n            <option value=\"MERITOCRACY\">MERITOCRACY</option>\n            <option value=\"TOTALITARIANISM\">TOTALITARIANISM</option>\n        </select>\n    );\n};\n\n","import React, {useEffect, useState} from 'react';\nimport {CellInput} from \"./CellInput/CellInput\";\nimport {CellSelectClimate} from \"./CellSelectCapital/CellSelectClimate\";\nimport {CellSelectorGovernment} from \"./CellSelectorGovernment/CellSelectorGovernment\";\n\nexport const Content = ({content, onClick, checkEnter, sendUpdate}) => {\n\n    return (\n\n        content.map(item =>\n            <tr key={item.id}>\n                {/*<td>{item.id}</td>*/}\n                <td>{item.id}</td>\n                {/*<td>{item.name}</td>*/}\n                <td><CellInput checkEnter={(e, content) => checkEnter(e, item.id, \"name\", content)} props={item.name} /></td>\n                <td><CellInput checkEnter={(e, content) => checkEnter(e, item.id, \"coordinate_x\", content)} props={item.coordinates.x} /></td>\n                <td><CellInput checkEnter={(e, content) => checkEnter(e, item.id, \"coordinate_y\", content)} props={item.coordinates.y} /></td>\n                <td>{new Date(\n                    item.creationDate.year,\n                    item.creationDate.month-1,\n                    item.creationDate.day\n                ).toString()}</td>\n                <td><CellInput checkEnter={(e, content) => checkEnter(e, item.id, \"area\", content)} props={item.area} /></td>\n                <td><CellInput checkEnter={(e, content) => checkEnter(e, item.id, \"population\", content)} props={item.population} /></td>\n                <td><CellInput checkEnter={(e, content) => checkEnter(e, item.id, \"metersAboveSeaLevel\", content)} props={item.metersAboveSeaLevel} /></td>\n                <td><CellInput checkEnter={(e, content) => checkEnter(e, item.id, \"establishmentDate\", content)} props={item.establishmentDate} /></td>\n                {/*<td>{String(item.capital)}</td>*/}\n                <td><CellSelectClimate\n                    props={item.climate}\n                    sendUpdate={(content) => sendUpdate(item.id, \"climate\", content)}\n                /></td>\n                {/*<td>{item.government}</td>*/}\n                <td><CellSelectorGovernment\n                    props={item.government}\n                    sendUpdate={(content) => sendUpdate(item.id, \"government\", content)}\n                /></td>\n                <td><CellInput checkEnter={(e, content) => checkEnter(e, item.id, \"governor_height\", content)} props={item.governor.height} /></td>\n                {/*<td><CellInput checkEnter={(e, content) => checkEnter(e, item.id, \"governor_birthday\", content)} props={item.governor.birthday} /></td>*/}\n                <td>{new Date(\n                    item.governor.birthday.dateTime.date.year,\n                    item.governor.birthday.dateTime.date.month-1,\n                    item.governor.birthday.dateTime.date.day,\n                    item.governor.birthday.dateTime.time.hour,\n                    item.governor.birthday.dateTime.time.minute,\n                    item.governor.birthday.dateTime.time.second,\n                ).toString()}</td>\n                {/*<td>{item.governor.birthday.birthday}</td>*/}\n                <button onClick={(event) => onClick(event.target.value)} value={item.id}>Удалить</button>\n            </tr>)\n    );\n};\n","import React from 'react';\n\n\nexport const countPage = (pages, pagesCount, currentPage) => {\n    if(pagesCount > 10) {\n        if(currentPage > 5) {\n            for (let i = currentPage-4; i <= currentPage+5; i++) {\n                pages.push(i)\n                if(i == pagesCount) break\n            }\n        }\n        else {\n            for (let i = 1; i <= 10; i++) {\n                pages.push(i)\n                if(i == pagesCount) break\n            }\n        }\n    }  else {\n        for (let i = 1; i <= pagesCount; i++) {\n            pages.push(i)\n        }\n    }\n};\n","export const ALL = \"ALL\";\nexport const FILTER = \"FILTER\";\nexport const SORT = \"SORT\";\n","export const createJSON = (id, field, content) => {\n\n    switch (field) {\n        case(\"name\"):\n            return {\n                id: id,\n                name: content\n            }\n        case (\"coordinate_x\"):\n            console.log(parseInt(content))\n            if(content == \"\" || isNaN(parseInt(content))){\n                content = \"\"\n                return {\n                    id: id,\n                    coordinate_x: content\n                }\n            }else {\n                return {\n                    id: id,\n                    coordinate_x: parseInt(content)\n                }\n            }\n        case (\"coordinate_y\"):\n            if(content == \"\" || isNaN(parseFloat(content))) {\n                content = \"\"\n                return {\n                    id: id,\n                    coordinate_x: content\n                }\n            }else {\n                return {\n                    id: id,\n                    coordinate_y: parseFloat(content)\n                }\n            }\n        case (\"area\"):\n            if(content == \"\" || isNaN(parseInt(content))) {\n                content = \"\"\n                return {\n                    id: id,\n                    area: content\n                }\n            }else{\n                return {\n                    id: id,\n                    area: parseInt(content)\n                }\n            }\n        case (\"population\"):\n            if(content == \"\" || isNaN(parseInt(content))) {\n                content = \"\"\n                return {\n                    id: id,\n                    population: content\n                }\n            }else {\n                return {\n                    id: id,\n                    population: parseInt(content)\n                }\n            }\n        case (\"metersAboveSeaLevel\"):\n            if(content == \"\" || isNaN(parseInt(content))) {\n                content = \"\"\n                return {\n                    id: id,\n                    metersAboveSeaLevel: content\n                }\n            }else{\n                    return {\n                        id: id,\n                        metersAboveSeaLevel: parseInt(content)\n                    }\n            }\n        case (\"establishmentDate\"):\n                return {\n                    id: id,\n                    establishmentDate: content\n                }\n\n        // case (\"\"):\n        //     return {\n        //         id: id,\n        //         capital: Boolean(content)\n        //     }\n        case (\"government\"):\n                return {\n                    id: id,\n                    government: content\n                }\n        case (\"climate\"):\n            return {\n                id: id,\n                climate: content\n            }\n        case (\"governor_height\"):\n            if(content == \"\" || isNaN(parseFloat(content))) {\n                content = \"\"\n                return {\n                    id: id,\n                    governor_height: content\n                }\n            }else{\n                return {\n                    id: id,\n                    governor_height: parseFloat(content)\n                }\n            }\n\n    }\n}\n","import React, {useEffect, useState} from 'react';\nimport {Content} from \"../../components/ContentList/Content\";\nimport {toast, Toaster} from \"react-hot-toast\";\nimport {PaginationList} from \"../../paginationList/paginationList\";\nimport {countPage} from \"../../Utils/countPage\";\nimport style from \"../../paginationList/paginationList.scss\"\nimport {ALL, FILTER, SORT} from \"../../Utils/modes\";\nimport {createJSON} from \"../../Utils/createJSON\";\nimport {Button} from \"react-bootstrap\";\n\n\n\nconst base_url = \"http://localhost:8080/lab1/\"\nconst api_url = `${base_url}city`\n\nexport const ContentPage = () => {\n    const [mode, setMode] = useState(\"\");\n    const [content, setContent] = useState([]);\n    const [id, setId] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [coordinate_x, setCoordinateX] = useState(\"\");\n    const [coordinate_y, setCoordinateY] = useState(\"\");\n    const [creationData, setData] = useState(\"\");\n    const [area, setArea] = useState(\"\");\n    const [population, setPopulation] = useState(\"\");\n    const [metersAboveSeaLevel, setMASL] = useState(\"\");\n    const [establishmentDate, setEstablishmentDate] = useState(\"\");\n    const [government, setGovernment] = useState(\"\");\n    const [climate, setClimate] = useState(\"\");\n    const [governor_height, setGovernorHeight] = useState(\"\");\n    const [governor_birthday, setGovernorBirthday] = useState(\"\");\n    const [sortStructure, setSortStructure] = useState({\n        id: false,\n        name: false,\n        coordinates_x: false,\n        coordinates_y: false,\n        area: false,\n        population: false,\n        metersAboveSeaLevel: false,\n        establishmentDate: false,\n        climate: false,\n        government: false,\n        governor_height: false,\n        governor_birthday: false,\n    });\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const [perPage, setPerPage] = useState(5);\n    const [totalCount, setTotalCount] = useState(10);\n    const pagesCount = Math.ceil(totalCount/perPage)\n    const pages = []\n    countPage(pages, pagesCount, currentPage);\n\n    useEffect(() => {\n        switch (mode) {\n            case ALL:\n                getAll();\n                break;\n            case FILTER:\n                sendFilter();\n                break;\n            case SORT:\n                sendSort();\n                break\n        }\n    }, [currentPage]);\n\n    useEffect(() => {\n        getAll();\n    }, [])\n\n    useEffect(() => {\n        getOneCity();\n    }, [id])\n\n    useEffect(() => {\n        // console.log(sortStructure);\n        // let url = `http://localhost:8080/city?`\n        // for (let field in sortStructure) {\n        //     if (sortStructure[field] === true) {\n        //         url += `sort=${field}&`;\n        //     }\n        // }\n        // fetch(url)\n        //     .then(res => res.json())\n        //     .then(status)\n        //     .then(\n        //         (result) => {\n        //             setContent(result);\n        //             countPage(pages, pagesCount, currentPage);\n        //             // getPage();\n        //         }\n        //     ).catch(error => {\n        //     console.log('error, sry')\n        // })\n        setMode(SORT);\n        sendSort();\n    }, [sortStructure])\n\n    useEffect(() => {\n        setMode(FILTER);\n        sendFilter();\n    }, [name, coordinate_x, coordinate_y, creationData, area, population, metersAboveSeaLevel, establishmentDate, climate,\n        government, governor_height, governor_birthday])\n\n    const getOneCity = () => {\n        fetch(`${api_url}/${id}`)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    if (result.total > 0) {\n                        setContent(result.content);\n                        setTotalCount(result.total);\n                    } else {\n                        getAll();\n                    }\n                },\n                (err) => {\n                    setContent([]);\n                    setTotalCount(0);\n                }\n            )\n    }\n\n    const getAll = () => {\n        fetch(`${api_url}?page=${currentPage}&pageSize=${perPage}`)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setContent(result.content);\n                    setTotalCount(result.total);\n                },\n                (error) => {\n                    toast.error(\"Сервис сейчас недоступен\");\n                }\n            )\n    }\n\n    const sendFilter = () => {\n        fetch(`${api_url}?page=${currentPage}&pageSize=${perPage}${createURL()}`)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    if (perPage > result.total) {\n                        setCurrentPage(1);\n                    }\n                    setTotalCount(result.total);\n                    setContent(result.content);\n                },\n                (error) => {\n                    toast.error(\"Сервис сейчас недоступен\");\n                }\n            )\n    }\n\n    const sendSort = () => {\n        let url = `${api_url}?page=${currentPage}&pageSize=${perPage}`\n        for (let field in sortStructure) {\n            if (sortStructure[field] === true) {\n                url += `&sort=${field}`;\n            }\n        }\n        fetch(url)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setTotalCount(result.total);\n                    setContent(result.content);\n                },\n                (error) => {\n                    toast.error(\"Сервис сейчас недоступен\");\n                }\n            )\n    }\n\n    const create = () => {\n        fetch(`${api_url}/`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify(city())\n        })\n            .then(async (response) => {\n                if (\n                    Math.trunc(response.status / 100) === 4\n                    || Math.trunc(response.status / 100) === 5\n                    || response.status === 429\n                ) {\n                    let a = await response.json().then(data => data);\n                    console.log(a);\n                    a.map(err => {\n                        toast.error(err.detailMessage)\n                    })\n\n                    toast.error(await response.json().then(data => data.message));\n                } else {\n                    toast.success(\"Созданно\");\n                    sendFilter();\n                }\n            })\n            .catch((err) => {\n                //toast.error(\"Сервис сейчас недоступен\");\n            })\n    }\n\n    const deleteCity = (id) => {\n        if (id !== \"\") {\n            fetch(`${api_url}/${id}`,{\n                method: \"DELETE\",\n                headers: {\n                    'Content-Type': 'application/json;charset=utf-8'\n                }\n            })\n            .then(async (response) => {\n                if (\n                    Math.trunc(response.status / 100) === 4\n                    || Math.trunc(response.status / 100) === 5\n                    || response.status === 429\n                ) {\n                    toast.error(await response.text());\n                } else {\n                    toast.success(\"Удалено\");\n                    sendFilter();\n                }\n            })\n            .catch((err) => {\n                toast.error(\"Сервис сейчас недоступен\");\n            })\n        }\n    }\n\n    const deleteByClimate = () => {\n\n        if (climate != \"\") {\n            fetch(`${base_url}delete/city?climate=${climate}`, {\n                method: \"DELETE\"\n            })\n                .then(async (response) => {\n                    if (\n                        Math.trunc(response.status / 100) === 4\n                        || Math.trunc(response.status / 100) === 5\n                        || response.status === 429\n                    ) {\n                        toast.error(await response.text());\n                    } else {\n                        toast.success(\"Удаленно\");\n                    }\n                })\n                .catch((err) => {\n                    toast.error(\"Сервис сейчас недоступен\");\n                })\n        } else {\n            toast.error(\"Поле climate незаданно\");\n        }\n    }\n\n    const getWithHigherGovernment = () => {\n        if (government != \"\") {\n            fetch(`${api_url}/by/government/higher?government=${government}`)\n                .then(async (response) => {\n                    if (\n                        Math.trunc(response.status / 100) === 4\n                        || Math.trunc(response.status / 100) === 5\n                        || response.status === 429\n                    ) {\n                        toast.error(await response.text());\n                    } else {\n                        toast.success(\"Больше чем\" + government);\n                        setContent(await response.json());\n                    }\n                })\n                .catch((err) => {\n                    console.log(err)\n                    toast.error(\"Сервис сейчас недоступен\");\n                })\n        }else{\n            toast.error(\"Выберите government\")\n        }\n        // .then(async (response) => {\n        //     if (\n        //         Math.trunc(response.status / 100) === 4\n        //         || Math.trunc(response.status / 100) === 5\n        //         || response.status === 429\n        //     ) {\n        //         toast.error(await response.text());\n        //     } else {\n        //         setContent(await response.json());\n        //     }\n        // })  // .then(async (response) => {\n        //     if (\n        //         Math.trunc(response.status / 100) === 4\n        //         || Math.trunc(response.status / 100) === 5\n        //         || response.status === 429\n        //     ) {\n        //         toast.error(await response.text());\n        //     } else {\n        //         setContent(await response.json());\n        //     }\n        // })\n    }\n\n    const getWithLowerGovernment = () => {\n        if (government != \"\") {\n            fetch(`${api_url}/by/government/lower?government=${government}`)\n                .then(async (response) => {\n                    if (\n                        Math.trunc(response.status / 100) === 4\n                        || Math.trunc(response.status / 100) === 5\n                        || response.status === 429\n                    ) {\n                        toast.error(await response.text());\n                    } else {\n                        toast.success(\"Меньше чем \" + government );\n                        setContent(await response.json());                    }\n                })\n                .catch((err) => {\n                    toast.error(\"Сервис сейчас недоступен\");\n                })\n        }else{\n            toast.error(\"Выберите government\")\n        }\n    }\n\n    const sendUpdate = (id, field, content) => {\n        fetch(`${api_url}`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify(createJSON(id, field, content))\n        })\n            .then(async (response) => {\n                if (\n                    Math.trunc(response.status / 100) === 4\n                    || Math.trunc(response.status / 100) === 5\n                    || response.status === 429\n                ) {\n                    toast.error(await response.json().then(data => data.message));\n                } else {\n                    toast.success(\"Изменено\");\n                }\n            })\n    }\n\n    const createURL = () => {\n        let str =\"&\"\n        if (name !== \"\") {\n            str += `name=${name}&`\n        } if (coordinate_x !== \"\") {\n            str += `coordinates_x=${coordinate_x}&`;\n        } if (coordinate_y !== \"\") {\n            str += `coordinates_y=${coordinate_y}&`;\n        } if (creationData !== \"\") {\n            str += `creationDate=${creationData}&`;\n        } if (area !== \"\") {\n            str += `area=${area}&`;\n        } if (population !== \"\") {\n            str += `population=${population}&`;\n        } if (metersAboveSeaLevel !== \"\") {\n            str += `metersAboveSeaLevel=${metersAboveSeaLevel}&`;\n        } if (establishmentDate !== \"\") {\n            str += `establishmentDate=${establishmentDate}&`;\n        } if (climate !== \"\") {\n            str += `climate=${climate}&`;\n        } if (government !== \"\") {\n            str += `government=${government}&`;\n        } if (governor_birthday !== \"\") {\n            str += `governor_birthday=${governor_birthday}&`;\n        }if (governor_height !== \"\") {\n            str += `governor_height=${governor_height}&`;\n        }\n        return str;\n    }\n\n    //todo return\n    const city = () => {\n        let c = {\n            name : name,\n            coordinates : {\n                x : parseInt(coordinate_x),\n                y : parseFloat(coordinate_y)\n            },\n            area : parseInt(area),\n            population : parseInt(population),\n            metersAboveSeaLevel : parseInt(metersAboveSeaLevel),\n            establishmentDate : establishmentDate,\n            climate : climate,\n            government : government,\n            governor : {\n                height : parseFloat(governor_height),\n                birthday: governor_birthday\n            }\n        };\n\n        return c;\n    }\n    const clearForm = () => {\n        setId(\"\");\n        setName(\"\");\n        setCoordinateX(\"\");\n        setCoordinateY(\"\");\n        setData(\"\");\n        setArea(\"\");\n        setPopulation(\"\");\n        setMASL(\"\");\n        setEstablishmentDate(\"\");\n        setClimate(\"\");\n        setGovernment(\"\");\n        setGovernorBirthday(\"\");\n        setGovernorHeight(\"\");\n    }\n\n    const checkEnter = (e, id, field, content) => {\n        if (e.key === 'Enter' || e.keyCode === 13) {\n            sendUpdate(id, field, content)\n        }\n    }\n\n    return (\n        <div>\n            <Button variant=\"primary\" onClick={() => create()}>Создать</Button>\n            <Button onClick={() => clearForm()}>Очистить</Button>\n            <button onClick={() => deleteByClimate()}>delete by Climate</button>\n            <button onClick={() => getWithHigherGovernment()}>Higher government</button>\n            <button onClick={() => getWithLowerGovernment()}>Lower government</button>\n            <Toaster />\n        <table>\n            <tr>\n                <td>id<input name=\"id\" type=\"checkbox\" onClick={(event) => setSortStructure({...sortStructure, [event.target.name]: event.target.checked})}/></td>\n                <td>name<input name=\"name\" type=\"checkbox\" onClick={(event) => setSortStructure({...sortStructure, [event.target.name]: event.target.checked})}/></td>\n                <td>coordinates_x<input name=\"coordinates_x\" type=\"checkbox\" onClick={(event) => setSortStructure({...sortStructure, [event.target.name]: event.target.checked})}/></td>\n                <td>coordinates_y<input name=\"coordinates_y\" type=\"checkbox\" onClick={(event) => setSortStructure({...sortStructure, [event.target.name]: event.target.checked})}/></td>\n                <td>creationDate<input name=\"creationDate\" type=\"checkbox\" onClick={(event) => setSortStructure({...sortStructure, [event.target.name]: event.target.checked})}/></td>\n                <td>area<input name=\"area\" type=\"checkbox\" onClick={(event) => setSortStructure({...sortStructure, [event.target.name]: event.target.checked})}/></td>\n                <td>population<input name=\"population\" type=\"checkbox\" onClick={(event) => setSortStructure({...sortStructure, [event.target.name]: event.target.checked})}/></td>\n                <td>metersAboveSeaLevel<input name=\"metersAboveSeaLevel\" type=\"checkbox\" onClick={(event) => setSortStructure({...sortStructure, [event.target.name]: event.target.checked})}/></td>\n                <td>establishmentDate<input name=\"establishmentDate\" type=\"checkbox\" onClick={(event) => setSortStructure({...sortStructure, [event.target.name]: event.target.checked})}/></td>\n                <td>climate<input name=\"climate\" type=\"checkbox\" onClick={(event) => setSortStructure({...sortStructure, [event.target.name]: event.target.checked})}/></td>\n                <td>government<input name=\"government\" type=\"checkbox\" onClick={(event) => setSortStructure({...sortStructure, [event.target.name]: event.target.checked})}/></td>\n                <td>governor_height<input name=\"governor_height\" type=\"checkbox\" onClick={(event) => setSortStructure({...sortStructure, [event.target.name]: event.target.checked})}/></td>\n                <td>governor_birthday<input name=\"governor_birthday\" type=\"checkbox\" onClick={(event) => setSortStructure({...sortStructure, [event.target.name]: event.target.checked})}/></td>\n                <td> </td>\n            </tr>\n\n            <tr>\n                <td><input type=\"text\" value={id} onChange={(event) => setId(event.target.value)}/></td>\n                <td><input type=\"text\" value={name} onChange={(event) => setName(event.target.value)}/></td>\n                <td><input type=\"text\" value={coordinate_x} onChange={(event) => setCoordinateX(event.target.value)}/></td>\n                <td><input type=\"text\" value={coordinate_y} onChange={(event) => setCoordinateY(event.target.value)}/></td>\n                <td><input type=\"date\" value={creationData} onChange={(event) => setData(event.target.value)}/></td>\n                <td><input type=\"text\" value={area} onChange={(event) => setArea(event.target.value)}/></td>\n                <td><input type=\"text\" value={population} onChange={(event) => setPopulation(event.target.value)}/></td>\n                <td><input type=\"text\" value={metersAboveSeaLevel} onChange={(event) => setMASL(event.target.value)}/></td>\n                <td><input type=\"date\" value={establishmentDate} onChange={(event) => setEstablishmentDate(event.target.value)}/></td>\n                <td><select value={climate} onChange={(event) => setClimate(event.target.value)}>\n                    <option value=\"\"> </option>\n                    <option value=\"MONSOON\">MONSOON</option>\n                    <option value=\"HUMIDSUBTROPICAL\">HUMIDSUBTROPICAL</option>\n                    <option value=\"SUBARCTIC\">SUBARCTIC</option>\n                </select></td>\n                <td><select value={government} onChange={(event) => setGovernment(event.target.value)}>\n                    <option value=\"\"> </option>\n                    <option value=\"ANARCHY\">ANARCHY</option>\n                    <option value=\"DESPOTISM\">DESPOTISM</option>\n                    <option value=\"CORPORATOCRACY\">CORPORATOCRACY</option>\n                    <option value=\"MERITOCRACY\">MERITOCRACY</option>\n                    <option value=\"TOTALITARIANISM\">TOTALITARIANISM</option>\n                </select></td>\n                <td><input type=\"text\" value={governor_height} onChange={(event) => setGovernorHeight(event.target.value)}/></td>\n                <td><input type=\"datetime-local\" value={governor_birthday} onChange={(event) => setGovernorBirthday(event.target.value)}/></td>\n                <td> </td>\n            </tr>\n\n            <Content\n                sendUpdate={(id, name, content) => sendUpdate(id, name, content)}\n                checkEnter={(e, id, name, content) => checkEnter(e, id, name, content)}\n                onClick={(id) => deleteCity(id)}\n                content={content}\n            />\n        </table>\n\n            <div className=\"pages\">\n                {pages.map((page, index) => <span\n                    key={index}\n                    className={currentPage == page ? \"current-page\" : \"page\"}\n                    onClick={() => {setCurrentPage(page)}}>{page}</span>)}\n            </div>\n        </div>\n);\n};\n","import React from 'react';\nimport {Redirect, Route, Switch, useLocation} from \"react-router\";\nimport {city_page, start_page} from \"../../modules/api\";\nimport {StartPage} from \"../../pages/StartPage/StartPage\";\nimport {ContentPage} from \"../../pages/ContentPage/ContentPage\";\n\n\nexport const Router = (children, ...props) => {\n    const location = useLocation();\n\n    return (\n        <Switch>\n            {/*<Route*/}\n            {/*    exact*/}\n            {/*    path={[*/}\n            {/*        person_page,*/}\n            {/*        location_page,*/}\n            {/*        coordinate_page*/}\n            {/*    ]}*/}\n            {/*>*/}\n            {/*    <Redirect to={`/${location.pathname}/1`} />*/}\n            {/*</Route>*/}\n            <Route exact path={'/'}>\n                <Redirect to={start_page}/>\n            </Route>\n            <Route exact path={start_page}>\n                <StartPage/>\n            </Route>\n            <Route\n                exact\n                path={[\n                    `${city_page}/:id(\\\\d)`,\n                ]}\n            >\n            <ContentPage/>\n            </Route>\n            <Route>\n                <Redirect to={start_page} />\n            </Route>\n            {/*{children}*/}\n        </Switch>\n    );\n};\n\n","import './App.css';\nimport {Header} from \"./components/Header/Header\";\nimport {Router} from \"./components/Router/Router\";\n\nfunction App() {\n\n    return (\n    <div className=\"App\">\n      <Header/>\n      <Router/>\n    </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}